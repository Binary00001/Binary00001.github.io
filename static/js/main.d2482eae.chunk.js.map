{"version":3,"sources":["Nav.js","Links.js","pages/index.jsx","pages/shotClock.jsx","pages/projects.jsx","pages/404.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","class","href","type","data-toggle","data-target","id","to","className","Links","style","marginBottom","color","size","margin","textDecoration","MainPage","padding","Results","props","this","count","chance","React","Component","ShotorNot","state","counter","handleClick","bind","setState","Math","random","marginTop","Button","variant","onClick","Projects","Card","Body","Title","Text","src","alt","ErrorPage","paddingTop","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2482eae.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <div>\n      <nav class=\"navbar navbar-expand-md bg-dark navbar-dark fixed-top\">\n        <a class=\"navbar-brand text-danger\" href=\"/\">\n          ANDREW RIGGS\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#collapsibleNavbar\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n          <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                about\n              </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link to=\"/projects\" className=\"nav-link\">\n                projects\n              </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link to=\"/links\" className=\"nav-link\">\n                links\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { FaGithubAlt, FaTwitter } from \"react-icons/fa\";\n\nconst Links = () => {\n  return (\n    <div\n      className=\"conatiner-fluid border-top text-center fixed-bottom\"\n      style={{ marginBottom: \"1em\" }}\n    >\n      <div>\n        <a href=\"https://www.twitter.com/mistahBinary\">\n          <FaTwitter color=\"black\" size=\"30\" style={{ margin: \"0.5em 2em\" }} />\n        </a>\n        <a href=\"https://www.github.com/Binary00001\">\n          <FaGithubAlt\n            color=\"black\"\n            size=\"30\"\n            style={{ margin: \"0.5em 2em\" }}\n          />\n        </a>\n      </div>\n      <div>\n        <p>\n          I'm hosted with{\" \"}\n          <a\n            href=\"https://pages.github.com/\"\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <strong>github pages</strong>\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Links;\n","import React from \"react\";\nimport Nav from \"../Nav\";\nimport Links from \"../Links\";\n\nconst MainPage = () => {\n  return (\n    <div>\n      <Nav />\n\n      <div className=\"text-center\" style={{ margin: 0 }}>\n        <p className=\"display-4 bg-dark text-danger\" style={{ padding: \"1em\" }}>\n          BINARY00001\n        </p>\n\n        <p className=\"display-5\" style={{ margin: \"6em 0\" }}>\n          01000111\n          <br />\n          01100101\n          <br />\n          01100101\n          <br />\n          01101011\n        </p>\n      </div>\n      <Links />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <h1 className=\"text-center\">\n        {this.props.count < 1\n          ? \"\"\n          : this.props.chance === true\n          ? `It's Shot O'clock!`\n          : `Not yet, drink some water`}\n      </h1>\n    );\n  }\n}\n\nclass ShotorNot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(props) {\n    this.setState({\n      counter: (this.state.counter += 1),\n    });\n  }\n  render() {\n    const chance = Math.random() >= 0.5;\n    return (\n      <div className=\"text-center\" style={{ marginTop: 50 }}>\n        <Button variant=\"info\" onClick={this.handleClick}>\n          Is it time?\n        </Button>\n\n        <Results chance={chance} count={this.state.counter} />\n\n        {/* <p>{\"Turn: \" + this.state.counter}</p> */}\n      </div>\n    );\n  }\n}\n\nexport default ShotorNot;\n","import React from \"react\";\nimport Nav from \"../Nav\";\nimport Card from \"react-bootstrap/Card\";\nimport ShotorNot from \"./shotClock\";\n\nconst Projects = () => {\n  return (\n    <div>\n      <Nav />\n\n      <div style={{ margin: 0 }}>\n        <p\n          className=\"display-4 bg-dark text-danger text-center\"\n          style={{ padding: \"1em\" }}\n        >\n          projects\n        </p>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 text-center\">\n            <Card>\n              {/* <Card.Img\n                variant=\"top\"\n                src=\"https://pixy.org/images/placeholder.png\"\n              /> */}\n              <Card.Body>\n                <Card.Title>Shot Or Not</Card.Title>\n                <Card.Text>\n                  <ShotorNot />\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n          <div className=\"col-sm-4 text-center\">\n            <img\n              src=\"https://pixy.org/images/placeholder.png\"\n              className=\"img-thumbnail\"\n              alt=\"placeholder\"\n            />\n            Placeholder\n          </div>\n          <div className=\"col-sm-4 text-center\">\n            <img\n              src=\"https://pixy.org/images/placeholder.png\"\n              className=\"img-thumbnail\"\n              alt=\"placeholder\"\n            />\n            Placeholder\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport Nav from \"../Nav\";\n\nconst ErrorPage = () => {\n  return (\n    <div>\n      <Nav />\n      <div\n        className=\"jumbotron text-center\"\n        style={{ margin: 0, paddingTop: \"5em\" }}\n      >\n        <h1>404</h1>\n        <h3>Page Not Found</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport MainPage from \"./pages\";\nimport Projects from \"./pages/projects\";\nimport ErrorPage from \"./pages/404\";\nimport ShotorNot from \"./pages/shotClock\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route path=\"/404\" component={ErrorPage} />\n          <Route exact path=\"/shotClock\" component={ShotorNot} />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}